#+TITLE: git

* Commit

** TODO Objects

- blobs :: file contents
- tree object :: collection of blob
- commit object :: metadata (author, committer, parent) and pointer to the root project tree object

* Branch

** Why so fast?

Git stores a [[*Objects][commit object]] that contains a pointer to the snapshot of the content you staged.

Commit object contains:
- author's name and email address
- commit message
- pointer to the commit, and parent(s) commit
  + zero parents for the initial commit
  + one parent for a normal commit
  + multiple parents for a commit that results from a merge of two or more branches

A branch is simply a lightweight movable pointer to one of these commits:
- create a new branch is equal to creating a new pointer for you to move around.

*** TODO Can a commit has more than two parents?

** Term

- master :: default branch name
- HEAD :: special pointer pointer to current branch

** Switch Branch

=git checkout master= does two things:
1. move the HEAD pointer back to point to the =master= branch
2. revert the files in your working directory back to the snapshot that =master= points to

** Divergent

#+CAPTION: Divergent history
[[https://git-scm.com/book/en/v2/images/advance-master.png]]

** Cookbook

- create a branch but don't switch to it :: =git branch <name>=
- create a branch and switch to it :: =git checkout -b <newbranchname>=
- switch branch :: =git checkout testing=
- show where the branch pointers are pointing :: =git log --decorate=
- show all history :: =git log --oneline --decorate --graph --all=

* 配置

** git status octal

默认 git status 显示的 utf8 中文名是以 octal 显示的，需要进行如下设置 

#+BEGIN_SRC shell
git config --global core.quotepath off
#+END_SRC

* 未完成

- Git revert 如何看以后的版本？ `reflog` 合集
- soft 与 hard 与 mixed 的区别？
- `git checkout -- file` 丢弃工作区修改（从缓存区）
- `git reset HEAD file` 从提交中
- HEAD 指向 master，master 指向当前提交
- `git stash {apply,drop,pop,list}
- `git branch --set-upstream <branch-name> <origin/branch-name>`: 本地分支与远程进行关联

* Reference

- [[file:~/diary/book/git%E6%95%99%E7%A8%8B.org][Git 教程笔记]]
- [[https://git-scm.com/book/en/v2/Git-Branching-Branches-in-a-Nutshell][Git branching]]
