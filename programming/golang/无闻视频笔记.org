#+TITLE: 无闻 Go 视频教程笔记
#+AUTHOR: Zhao WenBin

* Go 开发环境搭建

** Go 基本介绍

- 类型安全，内存安全
- 支持并发
- 垃圾回收
- 快速编译（严格要示，不能有未被使用的导入，未使用的变量，不需要头文件）
- 快速编译
- UTF8 支持

** 安装，环境变量，目录

go 通过环境变量来设置参数，常见的有

- GOROOT
- GOPATH: 开发目录，其中包括 bin, pkg, src 等
- GOARCH
- GOHOSTARCH

其中 =${GOPATH}/bin= 保存生成的可执行文件， =${GOPATH}/pkg= 下保存生成的具体平台的库文件

** 命令

常见命令有

- build <main-src>
- install
- test
- doc
- fmt

* Go 基础知识

** 关键字

其有 25 个关键字，其中特殊的如 type, go, defer, interface, chan, default, fallthrough

** 注释方法

与 C++ 相同

** 代码文件的一般结构

1. package
2. import
3. const
4. var
5. type 定义 struct 或 interface
6. func

** import 小技巧

1. 别名： =import std "fmt"=
2. 省略调用： =import . "fmt"= ，类似于 python 中 =from fmt import *= ，慎用!

** 可见性规则

通过首字母大写来判定可见性

** import, var, const 简写

对于多个 import, var, const 可以合并，写在圆括号内（并可以用一条注释整体）

* 类型与变量

** 基本类型

- 布尔型: bool，取值只能是 true 或者 false
- 整型: uint/int（平台相关大小），uint/int{8,16,32,64} 指定范围
- 字节型: byte，是 uint8 的别名
- rune 型: 是 int32 的别名
- 浮点型: float32/float64
- 复数: complex64/complex128
- 指针: uintptr（与平台有关）

** 复合类型

- array
- struct
- string
- slice
- map
- chan
- interface
- func: 第一类成员

** 零值

每种类型都有默认零值，如 0, false, ""

** 类型别名

- 用 =type= 来定义别名
- 使用单独的类型，使逻辑更清晰（也可以定义不同方法）
- =type= 可以同 import, var, const 使用圆括号一次定义多个

** math

math 模块中有 MaxXX 与 MinXX，表示了不同类型的取值范围

** 变量的声明与赋值

- =var= 声明变量，需要指定类型
- ~=~ 进行赋值，可以对多个变量赋值
- 声明与赋值可以放在一起进行，这时编译器会自动推导类型，因此类型标注可以省略
- 在函数内可以用 ~:=~ 语法来进行声明与赋值
- 函数内不可以用 =var()= 定义多个变量
- 全局不能使用 ~:=~ 语法

** 空白符号

=_= 用于捕获无用的变量

** 类型转换

只能在兼容的类型之间进行


* 问题

** TODO 类型转换是静态的？还是动态的？有没有开销

** TODO =string= 与 =[]byte= 与 =[]rune= 的关系

** TODO =[10]int= 与 =[]int= 的区别

** TODO =[...]int{1,2,3}= 与 =[]int{1,2,3}= 的区别

* 外部链接

- Go 在谷歌：以软件工程为目的的语言设计
