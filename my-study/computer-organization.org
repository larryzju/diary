* 1. Computer Abstractions and Technology

** 1.1 Introduction 

*** 计算机分类

 - PC
 - Server
 - Embedded Computer

*** 后 PC 时代

 - 移动终端
 - WSC (Warehouse Scale Computer) && Cloud Computing

*** 学习内容

 - 高级语言如何编译生成低级语言
 - 软件硬件的的接口
 - 影响程序的性能，以及如何改善
 - 如何降低能耗
 - 并行处理

*** 影响程序性能的因素

 - 算法
 - 编程语言、编译、架构
 - 处理器与内存
 - IO


** 1.2 Eight Great Ideas in Computer Architecture

- Design for Moore's Law :: up and to the fright, design for rapid change
- abstract :: hide details
- make the common case fast :: 加速大概率事件
- parallelism :: 通过并行提高性能
- pipeline :: 通过流水线提高性能
- prediction :: it's better to ask for forgiveness than to ask for permission
- hierarchy of memories :: 三角形图示
- dependability via redundancy :: 通过冗余提高可靠性


** 1.3 Below Your Program

编程的一个核心思想是：抽象

计算机被抽象为三层

1. application software
2. system software: os and compiler
3. hardware

编程语言从底向上也有三层

1. machine language
2. assembly language
3. high-level programming language

高级编程语言的优势在于

1. 更易理解
2. 简洁
3. 抽象于物理硬件，方便移植



