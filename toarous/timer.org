* Overview

PIT (Programmable Interval Timer) chip
1. 3 independent frequency dividers
2. each has an output

Basic frequency is 1.193182 MHz. (1/4 of the CPU frequency, 1/3 of the
CGA video contorller frequency, 1/12 of the television circuitry
frequency).

Only PIT channel 2 gate is controlled by IO port 0x61, bit 0.

* Output

- channel 0 :: connected directly to IRQ0. BIOS set channel 0 with a count of 65536/65535 (18.2065 Hz)
- channel 1 :: unusable (once used to refresh DRAM but not used today)
- channel 2 :: connected to the PC speaker

* I/O Ports

** Ports

| I/O port | Usage                              |
|----------+------------------------------------|
|     0x40 | Channel 0 data port (r/w)          |
|     0x41 | Channel 1 data port (r/w)          |
|     0x42 | Channel 2 data port (r/w)          |
|     0x43 | Mode/Command register (write only) |

** Mode/Command Register

| Bits    | Usage                                                                                          |
|---------+------------------------------------------------------------------------------------------------|
| 6 and 7 | channel selector                                                                               |
| 4 and 5 | access mode: 00: Latch count value comand, 01: lobyte only, 10: hibyte only, 11: lobyte/hibyte |
| 1 to 3  | operating mode (6 kinds)                                                                       |
| 0       | BCD/Binary mode                                                                                | 

** TODO Operating Mode

* Code Analysis

** Basic Steps

1. add timer handler to IRQ1 (IDT 32)
2. Command 0x36:
   - select channel 0
   - access mode: lobyte/hibyte
   - operating mode: 2 (rate generator)
   - binary mode
3. write frequency divisor (lobyte first)
4. increse =timer_ticker= by one per tick, and increase =ticker= by one every 18 =timer_ticks=
