#+TITLE: Tk Library Notes
#+AUTHOR: Zhao WenBin

* Overview

- =Tk()= create root window
- create widget by set its parent window
- widget can be configured at or after create
- Configuration =command= can be used for callback

* Widget 

** Window Hierarchy

- Widget defined with its parent
- each widget have a path (simliar as unix file path from '/')

** Options

- Such as =text= or =command= (depend on type of widgets)
- Modified by
  + attribute: ~widget['text']="hello"~
  + configure function: ~widget.configure('text', "hello")~
- Show current configuration with =widget.configure()=

* Geometry Management

- Have different strategory geometry management
- =grid= is one of the geometry managements
- recursively applied to the master widget to guide the placement of slaves
- When master or slave to be resize, recaculate the layout
- The key of the management work:
  + widget has natural size, but not fit into the space of container
  + geometry management try to expand/shrink/resize/align the slaves according to its settings
- Some settings about =grid=:
  + =column=
  + =row=
  + =sticky=: for align to the grid
  + =columnconfigure= / =rowconfigure=: ?
- it's entirely possible for different masters to have different geometry managers

* Event Handling
* Python Tkinter
- since python3.1, rename =tkinter= to =ttk=

* Misc
** TODO Tk and TCL
** Themed widgets
** Redraw
** Dynamic Variable Binding
** Layout
** Callback
